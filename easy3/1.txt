Question 1

If we have this code:

class Greeting
  def greet(message)
    puts message
  end
end

class Hello < Greeting
  def hi
    greet("Hello")
  end
end

class Goodbye < Greeting
  def bye
    greet("Goodbye")
  end
end

What happens in each of the following cases:

case 1:

hello = Hello.new
hello.hi

Answer: It will print "Hello" to the screen. Calling "hi" on the hello object uses Greeting#greet to output the message ("Hello").

case 2:

hello = Hello.new
hello.bye

Answer: This will create a NoMethodError, because an instance of the Hello class doesn't have access to the method "bye"--bye is in neither the Hello class nor its superclass Greeting, but rather in the class Goodbye, which is a different subclass of Greeting.

case 3:

hello = Hello.new
hello.greet

Answer: This will raise an exception because you have entered the wrong number of arguments (0 instead of the 1 argument that Greeting#greet requires).

case 4:

hello = Hello.new
hello.greet("Goodbye")

Answer: This will print "Goodbye".

case 5:

Hello.hi

Answer:

This will produce a NoMethodError, because Hello#hi is an instance method, not a class method.
