Question 2

We have an Oracle class and a RoadTrip class that inherits from the Oracle class.

class Oracle
  def predict_the_future
    "You will " + choices.sample
  end

  def choices
    ["eat a nice lunch", "take a nap soon", "stay at work late"]
  end
end

class RoadTrip < Oracle
  def choices
    ["visit Vegas", "fly to Fiji", "romp in Rome"]
  end
end

What is the result of the following:

trip = RoadTrip.new
trip.predict_the_future

Answer:
A new RoadTrip object, trip, is created. Since RoadTrip is subclassed from Oracle, Oracle#predict_the_future can be called on the trip object. When Oracle#predict_the_future calls "choices", the RoadTrip#choices method overrides Oracle#choices since it's in the subclass, so Oracle#predict_the_futuere returns "You will " +  a randomly selected phrase from RoadTrip#choices ("visit Vegas", "fly to Fiji", or "romp in Rome").
